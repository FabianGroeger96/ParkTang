/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sample business network definition.
 */
namespace org.example.basic

asset Car identified by carId {
  --> User owner
  o String carId
  o String name
  o String model
  o String[] features
  o String balance optional
}

asset ParkSpace identified by parkId {
  --> User owner
  --> ParkSpaceStatus status
  o String parkId
  o String coordinates
  o String address
  o Double price
  o DateTime entry optional
}

asset ParkSpaceStatus identified by parkStatusId {
  o String parkStatusId
  o String free_from
  o String free_to
  o Boolean disabled
}

asset Bill identified by billId {
  --> User owner
  --> ParkSpace parking
  o String billId
  o Double price
  o BillStatus status
}

enum BillStatus {
    o PAYED
    o OPEN
    o PENDING
}

participant User identified by userId {
  o String userId
  o String firstName
  o String lastName
  o String email
  o String balance
}

transaction parking_in {
  --> Car car
  --> ParkSpace parkspace
}

transaction parking_out {
  --> Car car
  --> ParkSpace parkspace
}

transaction top_up_balance {
  --> User user
  o Double balance
}

transaction create_car {
  --> User user
  o String name
  o String model
  o String[] features
}

transaction create_parkspace {
  --> User user
  o String coordinates
  o String address
  o Double price
  o DateTime free_from
  o DateTime free_to
  o Boolean disabled
}

transaction create_user {
  o String firstName
  o String lastName
  o String email
}

transaction create_example_data_users {
}

transaction create_example_data_cars {
  --> User owner_car_1
  --> User owner_car_2
}

transaction create_example_data_parkspaces {
  --> User owner_parkspace
}

event ParkEvent {
  --> Car car
  --> ParkSpace parkspace
  o Double price
}

event UnableToPayEvent {
  --> User owner
  --> Bill bill
}
